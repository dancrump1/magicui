@import "tailwindcss";

@plugin 'tailwindcss-animate';

@custom-variant dark (&:is(.dark *));

@theme {
  --font-sans: var(--font-geist-sans), ui-sans-serif, system-ui, sans-serif,
    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  --font-mono: var(--font-geist-mono), ui-monospace, SFMono-Regular, Menlo,
    Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;
  --animate-gradient: gradient 8s linear infinite;
  --animate-meteor: meteor 5s linear infinite;
  --animate-grid: grid 15s linear infinite;
  --animate-marquee: marquee var(--duration) infinite linear;
  --animate-marquee-vertical: marquee-vertical var(--duration) linear infinite;
  --animate-spin-around: spin-around calc(var(--speed) * 2) infinite linear;
  --animate-shiny-text: shiny-text 8s infinite;
  --animate-shimmer-slide: shimmer-slide var(--speed) ease-in-out infinite alternate;
  --animate-ripple: ripple var(--duration, 2s) ease calc(var(--i, 0) * 0.2s) infinite;
  --animate-rippling: rippling var(--duration, 0.6s) ease-out;
  --animate-line: line 2s linear infinite;
  --animate-border-beam: border-beam calc(var(--duration) * 1s) infinite linear;
  --animate-orbit: orbit calc(var(--duration) * 1s) linear infinite;
  --animate-background-position-spin: background-position-spin 3000ms infinite alternate;
  --animate-shine: shine var(--duration) infinite linear;
  --animate-pulse: pulse var(--duration) ease-out infinite;
  --animate-rainbow: rainbow var(--speed, 2s) infinite linear;
  --animate-line-shadow: line-shadow 15s linear infinite;

  @keyframes accordion-down {
    from {
      height: 0;
    }

    to {
      height: var(--radix-accordion-content-height);
    }
  }

  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }

    to {
      height: 0;
    }
  }

  @keyframes background-position-spin {
    0% {
      background-position: top center;
    }

    100% {
      background-position: bottom center;
    }
  }

  @keyframes gradient {
    to {
      background-position: var(--bg-size) 0;
    }
  }

  @keyframes meteor {
    0% {
      transform: rotate(215deg) translateX(0);
      opacity: 1;
    }

    70% {
      opacity: 1;
    }

    100% {
      transform: rotate(215deg) translateX(-500px);
      opacity: 0;
    }
  }

  @keyframes grid {
    0% {
      transform: translateY(-50%);
    }

    100% {
      transform: translateY(0);
    }
  }

  @keyframes marquee {
    from {
      transform: translateX(0);
    }

    to {
      transform: translateX(calc(-100% - var(--gap)));
    }
  }

  @keyframes marquee-vertical {
    from {
      transform: translateY(0);
    }

    to {
      transform: translateY(calc(-100% - var(--gap)));
    }
  }

  @keyframes spin-around {
    0% {
      transform: translateZ(0) rotate(0);
    }

    15%,
    35% {
      transform: translateZ(0) rotate(90deg);
    }

    65%,
    85% {
      transform: translateZ(0) rotate(270deg);
    }

    100% {
      transform: translateZ(0) rotate(360deg);
    }
  }

  @keyframes ripple {

    0%,
    100% {
      transform: translate(-50%, -50%) scale(1);
    }

    50% {
      transform: translate(-50%, -50%) scale(0.9);
    }
  }

  @keyframes rippling {
    0% {
      opacity: 1;
    }

    100% {
      transform: scale(2);
      opacity: 0;
    }
  }

  @keyframes shimmer-slide {
    to {
      transform: translate(calc(100cqw - 100%), 0);
    }
  }

  @keyframes line {
    0% {
      mask-position-x: 0%;
    }

    100% {
      mask-position-x: 100%;
    }
  }

  @keyframes border-beam {
    100% {
      offset-distance: 100%;
    }
  }

  @keyframes shiny-text {

    0%,
    90%,
    100% {
      background-position: calc(-100% - var(--shiny-width)) 0;
    }

    30%,
    60% {
      background-position: calc(100% + var(--shiny-width)) 0;
    }
  }

  @keyframes orbit {
    0% {
      transform: rotate(calc(var(--angle) * 1deg)) translateY(calc(var(--radius) * 1px)) rotate(calc(var(--angle) * -1deg));
    }

    100% {
      transform: rotate(calc(var(--angle) * 1deg + 360deg)) translateY(calc(var(--radius) * 1px)) rotate(calc((var(--angle) * -1deg) - 360deg));
    }
  }

  @keyframes shine {
    0% {
      background-position: 0% 0%;
    }

    50% {
      background-position: 100% 100%;
    }

    to {
      background-position: 0% 0%;
    }
  }

  @keyframes pulse {

    0%,
    100% {
      box-shadow: 0 0 0 0 var(--pulse-color);
    }

    50% {
      box-shadow: 0 0 0 8px var(--pulse-color);
    }
  }

  @keyframes rainbow {
    0% {
      background-position: 0%;
    }

    100% {
      background-position: 200%;
    }
  }

  @keyframes line-shadow {
    0% {
      background-position: 0 0;
    }

    100% {
      background-position: 100% -100%;
    }
  }

  @keyframes aurora-border {

    0%,
    100% {
      border-radius: 37% 29% 27% 27% / 28% 25% 41% 37%;
    }

    25% {
      border-radius: 47% 29% 39% 49% / 61% 19% 66% 26%;
    }

    50% {
      border-radius: 57% 23% 47% 72% / 63% 17% 66% 33%;
    }

    75% {
      border-radius: 28% 49% 29% 100% / 93% 20% 64% 25%;
    }
  }

  @keyframes aurora-1 {

    0%,
    100% {
      top: 0;
      right: 0;
    }

    50% {
      top: 50%;
      right: 25%;
    }

    75% {
      top: 25%;
      right: 50%;
    }
  }

  @keyframes aurora-2 {

    0%,
    100% {
      top: 0;
      left: 0;
    }

    60% {
      top: 75%;
      left: 25%;
    }

    85% {
      top: 50%;
      left: 50%;
    }
  }

  @keyframes aurora-3 {

    0%,
    100% {
      bottom: 0;
      left: 0;
    }

    40% {
      bottom: 50%;
      left: 25%;
    }

    65% {
      bottom: 25%;
      left: 50%;
    }
  }

  @keyframes aurora-4 {

    0%,
    100% {
      bottom: 0;
      right: 0;
    }

    50% {
      bottom: 25%;
      right: 40%;
    }

    90% {
      bottom: 50%;
      right: 25%;
    }
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;

  @media (width >=--theme(--breakpoint-sm)) {
    max-width: none;
  }

  @media (width >=1600px) {
    max-width: 1600px;
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {

  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@utility step {
  counter-increment: step;

  &:before {
    @apply absolute inline-flex h-9 w-9 items-center justify-center rounded-full border-4 border-background bg-muted text-center -indent-px font-mono text-base font-medium;
    @apply ml-[-50px] mt-[-4px];
    content: counter(step);
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --ring: 240 5% 64.9%;
    --radius: 0.5rem;

    --color-1: 0 100% 63%;
    --color-2: 270 100% 63%;
    --color-3: 210 100% 63%;
    --color-4: 195 100% 63%;
    --color-5: 90 100% 63%;
  }

  .dark {
    --background: 0 0% 0%;
    --foreground: 0 0% 98%;
    --card: 0 0% 0%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 0%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 85.7% 97.3%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    @apply bg-background text-foreground;
    font-feature-settings:
      "rlig" 1,
      "calt" 1;
  }
}

@media (max-width: 640px) {
  .container {
    @apply px-4;
  }
}

.lab-bg {
  --mask-offset: 100px;
  -webkit-mask: linear-gradient(to bottom,
      transparent,
      #fff var(--mask-offset) calc(100% - var(--mask-offset)),
      transparent),
    linear-gradient(to right,
      transparent,
      #fff var(--mask-offset) calc(100% - var(--mask-offset)),
      transparent);
  mask: linear-gradient(to bottom,
      transparent,
      #fff var(--mask-offset) calc(100% - var(--mask-offset)),
      transparent),
    linear-gradient(to right,
      transparent,
      #fff var(--mask-offset) calc(100% - var(--mask-offset)),
      transparent);
  /* -webkit-mask: radial-gradient(circle at 50% 50%,transparent 0,#fff calc(100% - var(--mask-offset)),transparent 100%); */
  -webkit-mask-composite: source-in, xor;
  mask-composite: intersect;
}